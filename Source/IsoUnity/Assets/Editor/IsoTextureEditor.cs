//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34003
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections;
using UnityEngine;
using UnityEditor;

[CanEditMultipleObjects]
[CustomEditor(typeof(IsoTexture))]
public class IsoTextureEditor : Editor{


	IsoTexture isoTexture;
	public void OnEnable(){
		isoTexture = target as IsoTexture;

	}


	public override void OnInspectorGUI(){

		Event e = Event.current;
		
		isoTexture = target as IsoTexture;
		
		GUIStyle style = new GUIStyle();
		style.padding = new RectOffset(5,5,5,5);

		
		// Textura
		if(isoTexture != null){
			isoTexture.setTexture(UnityEditor.EditorGUILayout.ObjectField("Base tile", isoTexture.getTexture(), typeof(Texture2D), true) as Texture2D);
			isoTexture.name = UnityEditor.EditorGUILayout.TextField("Name", isoTexture.name);
			Texture2D texture = isoTexture.getTexture();
			
			if(texture != null){
				
				GUIContent rotationText = new GUIContent("Rotation: " + isoTexture.Rotation*90);
				Rect rotationRect = GUILayoutUtility.GetRect(rotationText, style);				
				if (e.isMouse && rotationRect.Contains(e.mousePosition)) { 
					
					if(e.type == EventType.MouseUp){
						isoTexture.Rotation++;
					}
				} 
				
				GUI.Button(rotationRect, rotationText);
				
				EditorGUILayout.BeginHorizontal();
				isoTexture.setXCorner(EditorGUILayout.IntField(isoTexture.getXCorner(),GUILayout.Width(30)));
				isoTexture.setXCorner(Mathf.FloorToInt(GUILayout.HorizontalSlider(isoTexture.getXCorner(),0,texture.width,null)));
				EditorGUILayout.EndHorizontal();
				
				EditorGUILayout.BeginHorizontal();
				isoTexture.setYCorner(EditorGUILayout.IntField(isoTexture.getYCorner(),GUILayout.Width(30)));
				isoTexture.setYCorner(Mathf.FloorToInt(GUILayout.HorizontalSlider(isoTexture.getYCorner(),0,texture.height,null)));
				EditorGUILayout.EndHorizontal();

				float auxWidth = Screen.width - 25;

				
				float converter = (auxWidth / texture.width*1.0f );
				
				float auxHeight = converter * (texture.height*1.0f);
				
				Rect auxRect = GUILayoutUtility.GetRect(auxWidth, auxHeight);
				
				auxRect.width = auxWidth;
				GUI.DrawTexture(auxRect,texture);
				
				Vector2 rectCorner = new Vector2(auxRect.x,auxRect.y);
				
				Vector2 xCorner = rectCorner + new Vector2( converter *isoTexture.getXCorner(), 0);
				Vector2 yCorner = rectCorner + new Vector2(0, converter * isoTexture.getYCorner());
				Vector2 xOtherCorner = rectCorner + new Vector2(converter * isoTexture.getOppositeXCorner(), auxHeight);
				Vector2 yOtherCorner = rectCorner + new Vector2(auxWidth, converter * isoTexture.getOppositeYCorner());

				Drawing.DrawLine(xCorner,yCorner, Color.yellow, 0.5f, false);

				/**/
				/*Vector2 pointA = xCorner, pointB = yCorner;
				float width = 0.5f;

				Texture2D lineTex = new Texture2D(1, 1);;
				Matrix4x4 matrix = GUI.matrix;
				Color savedColor = GUI.color;
				GUI.color = Color.yellow;
				float angle = Vector3.Angle(pointB - pointA, Vector2.right);
				if (pointA.y > pointB.y) { angle = -angle; }
				GUIUtility.ScaleAroundPivot(new Vector2((pointB - pointA).magnitude, width), new Vector2(pointA.x, pointA.y + 0.5f));
				GUIUtility.RotateAroundPivot(angle, pointA);
				GUI.DrawTexture(new Rect(pointA.x, pointA.y, 1, 1), lineTex);
				GUI.matrix = matrix;
				GUI.color = savedColor;*/

				Drawing.DrawLine(yCorner,xOtherCorner, Color.yellow, 0.5f, false);
				Drawing.DrawLine(xOtherCorner,yOtherCorner, Color.yellow, 0.5f, false);
				Drawing.DrawLine(yOtherCorner,xCorner, Color.yellow, 0.5f, false);

				//EditorGUI.DrawRect(new Rect(0,0,10,10), Color.black);
			}
			else
				EditorGUILayout.LabelField("Please asign a texture!", style);
		}else{
			EditorGUILayout.LabelField("Please select a texture o create a new one!", style);
		}

	}



}



